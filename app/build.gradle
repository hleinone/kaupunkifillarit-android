apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "io.fabric"
apply plugin: "build-time-tracker"

task askForPasswords << {
    android.signingConfigs.release.storeFile = file(STORE)
    android.signingConfigs.release.keyAlias = ALIAS
    if (project.hasProperty("STORE_PASSWORD")) {
        android.signingConfigs.release.storePassword = STORE_PASSWORD
    } else {
        android.signingConfigs.release.storePassword = new String(System.console().readPassword("\n\nKeystore " + android.signingConfigs.release.storeFile + " password: "))
    }
    if (project.hasProperty("KEY_PASSWORD")) {
        android.signingConfigs.release.keyPassword = KEY_PASSWORD
    } else {
        android.signingConfigs.release.keyPassword = new String(System.console().readPassword("\nKey " + android.signingConfigs.release.keyAlias + " password: "))
    }
}

tasks.withType(com.android.build.gradle.tasks.PackageApplication).whenTaskAdded { task ->
    if (!task.name.endsWith("Debug") && !task.name.endsWith("Test")) {
        task.dependsOn "askForPasswords"
    }
}

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0-rc4"

    def Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(file("version.properties")))
    def code = System.getenv().BUILD_NUMBER ?: versionProps["code"]
    defaultConfig {
        applicationId "fi.kaupunkifillarit"
        minSdkVersion 17
        targetSdkVersion 24
        versionCode code.toInteger()
        versionName versionProps["name"]
    }

    signingConfigs {
        release {
            storeFile file("/dev/null")
            storePassword ""
            keyAlias ""
            keyPassword ""
        }
    }

    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix " debug"
        }

        release {
            debuggable false
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        debug.java.srcDirs += "src/debug/kotlin"
        //androidTest.java.srcDirs += "src/androidTest/kotlin"
        //test.java.srcDirs += "src/test/kotlin"
    }

    packagingOptions {
        exclude "META-INF/LICENSE"
        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/NOTICE"
        exclude "META-INF/NOTICE.txt"
    }

    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "com.google.android.gms:play-services-maps:8.4.0"
    compile "com.google.android.gms:play-services-location:8.4.0"
    compile "com.google.android.gms:play-services-analytics:8.4.0"
    compile "com.android.support:appcompat-v7:24.1.1"
    compile "com.android.support:design:24.1.1"

    compile "com.google.dagger:dagger:2.5"
    kapt "com.google.dagger:dagger-compiler:2.5"
    provided "javax.annotation:jsr250-api:1.0"

    compile "com.bluelinelabs:logansquare:1.3.6"
    kapt "com.bluelinelabs:logansquare-compiler:1.3.6"

    compile "io.reactivex:rxkotlin:0.60.0"
    compile "io.reactivex:rxandroid:1.2.1"
    compile "com.trello:rxlifecycle:0.6.1"
    compile "com.trello:rxlifecycle-components:0.6.1"
    compile "com.trello:rxlifecycle-kotlin:0.6.1"
    compile "com.jakewharton.rxbinding:rxbinding-kotlin:0.4.0"
    compile "pl.charmas.android:android-reactive-location:0.9"

    compile "com.github.kittinunf.fuel:fuel:1.3.1"
    compile "com.github.kittinunf.fuel:fuel-android:1.3.1"
    compile "com.github.kittinunf.fuel:fuel-rxjava:1.3.1"

    compile "com.jakewharton.timber:timber:4.1.2"
    compile "com.crashlytics.sdk.android:crashlytics:2.6.0"
    compile "com.crashlytics.sdk.android:answers:1.3.8"
    compile "uk.co.chrisjenx:calligraphy:2.2.0"
    compile "de.psdev.licensesdialog:licensesdialog:1.8.1"
}

kapt {
    generateStubs = true
}

buildtimetracker {
    reporters {
        csv {
            output "build/times.csv"
            append true
            header false
        }

        summary {
            ordered false
            threshold 50
            barstyle "unicode"
        }

        csvSummary {
            csv "build/times.csv"
        }
    }
}

buildscript {
    ext.kotlin_version = "1.0.2"

    repositories {
        jcenter()
        maven { url "https://maven.fabric.io/public" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: "com.google.gms.google-services"
